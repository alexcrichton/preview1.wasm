name: CI
on:
  push:
    branches: [main, release-artifact]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Check Code style quickly by running `rustfmt` over all code
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup component add rustfmt
    - run: cargo fmt --all -- --check

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - run: rustup update stable && rustup default stable
  #   - run: rustup target add wasm32-wasi
  #   - run: RUSTFLAGS="-Clink-args=--import-memory" cargo build --target wasm32-wasi
  #   - run: cargo run -p verify -- ./target/wasm32-wasi/debug/wasi_snapshot_preview1.wasm
  #   - run: RUSTFLAGS="-Clink-args=--import-memory" cargo build --release --target wasm32-wasi
  #   - run: cargo run -p verify -- ./target/wasm32-wasi/release/wasi_snapshot_preview1.wasm
  #   - run: cargo test -p host

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add wasm32-wasi
    - run: cargo build --target wasm32-wasi --release
      env:
        RUSTFLAGS: -Clink-args=--import-memory -Ctarget-feature=+bulk-memory
    - uses: actions/upload-artifact@v3
      with:
        name: wasi_snapshot_preview1.wasm
        path: target/wasm32-wasi/release/wasi_snapshot_preview1.wasm

    - uses: marvinpinto/action-automatic-releases@latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/release-artifact'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: "Latest Build"
        files: target/wasm32-wasi/release/wasi_snapshot_preview1.wasm
